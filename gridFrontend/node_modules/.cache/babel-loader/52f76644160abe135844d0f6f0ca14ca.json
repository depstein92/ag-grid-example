{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/owner/Desktop/Projects/ag-grid-example/frontend/src/BatchPanel.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '500px',\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  description: {\n    fontSize: '30px',\n    fontFamily: 'arial',\n    textAlign: 'center',\n    marginTop: '35px'\n  },\n  title: {\n    fontSize: '40px',\n    width: '100%',\n    textAlign: 'center'\n  },\n  form: {\n    display: 'flex',\n    alignItems: 'center',\n    height: '250px',\n    justifyContent: 'space-evenly',\n    flexDirection: 'column'\n  },\n  formTitle: {\n    fontSize: '20px'\n  },\n  inputs: {\n    height: '30px',\n    fontSize: '20px'\n  }\n}));\n\nconst BatchPanel = () => {\n  _s();\n\n  const classes = useStyles();\n  const [formState, setFormState] = useState({\n    batchNumber: 0,\n    batchName: ''\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.title,\n      children: \"BatchCreator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.description,\n      children: \"This is a small app that takes a number of profile records and stores therm in a SQLite database. You can create batches of profile records by line numbers. The point of the app is to demonstrate knowledge of ag-record.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: classes.formTitle,\n        children: \"Number of Rows to be Inserted into Database\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: classes.inputs,\n        type: \"text\",\n        placeholder: \"Number of batchs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: classes.inputs,\n        type: \"text\",\n        placeholder: \"Batch Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        size: \"medium\",\n        color: \"primary\",\n        children: \"Primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BatchPanel, \"ggzC+FPoJO/3pgVyANkuFUt4plU=\", false, function () {\n  return [useStyles];\n});\n\n_c = BatchPanel;\nexport default BatchPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"BatchPanel\");","map":{"version":3,"sources":["/home/owner/Desktop/Projects/ag-grid-example/frontend/src/BatchPanel.jsx"],"names":["React","useState","useEffect","Button","Container","makeStyles","useStyles","theme","root","height","margin","spacing","description","fontSize","fontFamily","textAlign","marginTop","title","width","form","display","alignItems","justifyContent","flexDirection","formTitle","inputs","BatchPanel","classes","formState","setFormState","batchNumber","batchName"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,OADJ;AAEJ,aAAS;AACPC,MAAAA,MAAM,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADD;AAFL,GADiC;AAOvCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,QAAQ,EAAE,MADC;AAEXC,IAAAA,UAAU,EAAE,OAFD;AAGXC,IAAAA,SAAS,EAAE,QAHA;AAIXC,IAAAA,SAAS,EAAE;AAJA,GAP0B;AAavCC,EAAAA,KAAK,EAAE;AACLJ,IAAAA,QAAQ,EAAE,MADL;AAELK,IAAAA,KAAK,EAAE,MAFF;AAGLH,IAAAA,SAAS,EAAE;AAHN,GAbgC;AAkBvCI,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,UAAU,EAAE,QAFR;AAGJZ,IAAAA,MAAM,EAAE,OAHJ;AAIJa,IAAAA,cAAc,EAAE,cAJZ;AAKJC,IAAAA,aAAa,EAAE;AALX,GAlBiC;AAyBvCC,EAAAA,SAAS,EAAE;AACPX,IAAAA,QAAQ,EAAE;AADH,GAzB4B;AA4BvCY,EAAAA,MAAM,EAAG;AACNhB,IAAAA,MAAM,EAAE,MADF;AAENI,IAAAA,QAAQ,EAAE;AAFJ;AA5B8B,CAAZ,CAAD,CAA5B;;AAkCA,MAAMa,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAMC,OAAO,GAAGrB,SAAS,EAAzB;AACA,QAAM,CAACsB,SAAD,EAAYC,YAAZ,IAA4B5B,QAAQ,CAAC;AACvC6B,IAAAA,WAAW,EAAE,CAD0B;AAEvCC,IAAAA,SAAS,EAAE;AAF4B,GAAD,CAA1C;AAIA,sBACI,QAAC,SAAD;AAAW,IAAA,SAAS,EAAEJ,OAAO,CAACnB,IAA9B;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEmB,OAAO,CAACV,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAEU,OAAO,CAACf,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQI;AAAM,MAAA,MAAM,EAAC,EAAb;AAAgB,MAAA,SAAS,EAAEe,OAAO,CAACR,IAAnC;AAAA,8BACI;AAAO,QAAA,SAAS,EAAEQ,OAAO,CAACH,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAO,QAAA,SAAS,EAAEG,OAAO,CAACF,MAA1B;AAAkC,QAAA,IAAI,EAAC,MAAvC;AAA8C,QAAA,WAAW,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAO,QAAA,SAAS,EAAEE,OAAO,CAACF,MAA1B;AAAkC,QAAA,IAAI,EAAC,MAAvC;AAA8C,QAAA,WAAW,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI,QAAC,MAAD;AACI,QAAA,OAAO,EAAC,WADZ;AAEI,QAAA,IAAI,EAAC,QAFT;AAGI,QAAA,KAAK,EAAC,SAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CA/BD;;GAAMC,U;UACcpB,S;;;KADdoB,U;AAiCN,eAAeA,UAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '500px',   \n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  description: {\n    fontSize: '30px',\n    fontFamily: 'arial',\n    textAlign: 'center',\n    marginTop: '35px'\n  },\n  title: {\n    fontSize: '40px',\n    width: '100%',\n    textAlign: 'center'      \n  },\n  form: {\n    display: 'flex',\n    alignItems: 'center',\n    height: '250px',\n    justifyContent: 'space-evenly',\n    flexDirection: 'column'\n  },\n  formTitle: {\n      fontSize: '20px'\n  },\n  inputs : {\n     height: '30px',\n     fontSize: '20px' \n  }\n}));\n\nconst BatchPanel = () => {\n    const classes = useStyles();\n    const [formState, setFormState] = useState({\n        batchNumber: 0,\n        batchName: ''\n    })\n    return(\n        <Container className={classes.root}>\n            <div className={classes.title}>BatchCreator</div>\n            <div className={classes.description}>\n            This is a small app that takes a number of profile records\n            and stores therm in a SQLite database. You can create batches of\n            profile records by line numbers. The point of the app is to demonstrate\n            knowledge of ag-record. \n            </div>\n            <form action=\"\" className={classes.form}>\n                <label className={classes.formTitle}>\n                    Number of Rows to be Inserted into Database\n                </label>\n                <input className={classes.inputs} type=\"text\" placeholder=\"Number of batchs\" />\n                <input className={classes.inputs} type=\"text\" placeholder=\"Batch Name\" />\n                <Button \n                    variant=\"contained\" \n                    size=\"medium\" \n                    color=\"primary\"\n                >\n                    Primary\n                </Button>\n            </form>\n        </Container>\n    )\n}\n\nexport default BatchPanel;"]},"metadata":{},"sourceType":"module"}